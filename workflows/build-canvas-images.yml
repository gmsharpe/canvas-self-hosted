name: Build Canvas Docker images

# run manually or on pushes to main (adjust branches as you need)
on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  # change these defaults if you want a different image name / tag scheme
  IMAGE_NAME: canvas-lms
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write  # needed if pushing to GHCR
      id-token: write

    steps:
      - name: Checkout canvas-self-hosted repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout canvas-lms at specific commit
        # checkout the other repo into `canvas-lms/` directory
        uses: actions/checkout@v4
        with:
          repository: 'instructure/canvas-lms'
          ref: 'd5a99e9294e374e83f41197adce94aedf394750f' # the exact commit you specified
          path: 'canvas-lms'
          fetch-depth: 1

      - name: Set up QEMU (for multi-arch builds)
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      - name: Login to container registry (optional)
        if: ${{ secrets.REGISTRY_USERNAME && secrets.REGISTRY_PASSWORD }}
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY_HOST || 'ghcr.io' }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Prepare caches directory
        run: |
          mkdir -p ~/.cache/docker-buildx

      - name: Build canvas-lms image (local build, optional push)
        uses: docker/build-push-action@v5
        with:
          context: ./canvas-lms
          file: ./canvas-lms/Dockerfile-production
          # builder cache, speeds up subsequent builds
          cache-from: type=local,src=~/.cache/docker-buildx
          cache-to: type=local,dest=~/.cache/docker-buildx,new=true
          # if you want to push to registry, set push: true and ensure login step above ran
          push: ${{ secrets.PUSH_IMAGES == 'true' }}
          # image name; default uses GHCR when you set registry in secrets, otherwise change here
          tags: |
            ${{ secrets.REGISTRY_HOST || 'ghcr.io' }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ secrets.REGISTRY_HOST || 'ghcr.io' }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
          # Build args (common Canvas build variables â€” adjust to your needs)
          build-args: |
            NODE_ENV=production
            RAILS_ENV=production
            # If you need to skip npm install during asset compilation inside Dockerfile:
            # COMPILE_ASSETS_NPM_INSTALL=0

      - name: Output image info
        run: |
          echo "Built image tags:"
          echo "${{ secrets.REGISTRY_HOST || 'ghcr.io' }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
          echo "${{ secrets.REGISTRY_HOST || 'ghcr.io' }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest"

      - name: Optional: run smoke container (quick health check)
        if: ${{ always() && inputs.RUN_SMOKE != 'false' }}
        run: |
          # run briefly to ensure image can start (adjust command as appropriate for Canvas)
          docker run --rm --entrypoint echo ${{ secrets.REGISTRY_HOST || 'ghcr.io' }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} "image built"

